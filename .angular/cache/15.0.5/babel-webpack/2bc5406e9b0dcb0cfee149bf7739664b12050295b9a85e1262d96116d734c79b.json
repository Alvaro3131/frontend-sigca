{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ModulosService {\n  constructor(http) {\n    this.http = http;\n    this.urlmodulo = 'http://localhost:9090/api/modulo';\n    this.urlcategoria = 'http://localhost:9090/api/categoria';\n    this.urlSesionesDelModulo = 'http://localhost:9090/api/sesion/modulo';\n    this.urlRecursoSesion = 'http://localhost:9090/api/recursos/sesion/';\n    this.urlInsertarModulo = 'http://localhost:9090/api/modulo/new';\n    this.urlEliminarModulo = 'http://localhost:9090/api/modulo/delete/';\n    this.urlBuscarModulo = 'http://localhost:9090/api/modulo/search/';\n    this.urlUpdateModulo = 'http://localhost:9090/api/modulo/update/';\n    this.urlInsertarSesion = 'http://localhost:9090/api/sesion/new';\n    this.urlEliminarSesion = 'http://localhost:9090/api/sesion/delete/';\n    this.urlUpdateSesion = 'http://localhost:9090/api/sesion/update/';\n    this.urlBuscarSesion = 'http://localhost:9090/api/sesion/search/';\n    this.urlBuscarRecurso = 'http://localhost:9090/api/recursos/sesion/';\n    this.urlTraerTipoRecurso = 'http://localhost:9090/api/tipo/all';\n    this.urlAgregarRecurso = 'http://localhost:9090/api/recursos/new';\n    this.urlEliminarRecurso = 'http://localhost:9090/api/recursos/delete/';\n    this.urlUpdaterRecurso = 'http://localhost:9090/api/recursos/update/';\n    this.urlBuscarRecursoID = 'http://localhost:9090/api/recursos/search/';\n  }\n  ngOnInit() {}\n  getModulo() {\n    return this.http.get(this.urlmodulo + '/all');\n  }\n  getCategoria() {\n    return this.http.get(this.urlcategoria + '/all');\n  }\n  getSesionModulo(id) {\n    return this.http.get(`${this.urlSesionesDelModulo}/${id}`);\n  }\n  getRecursoSesion(id) {\n    return this.http.get(`${this.urlRecursoSesion}${id}`);\n  }\n  getModuloId(id) {\n    return this.http.get(`${this.urlBuscarModulo}${id}`);\n  }\n  getTipoRecursos() {\n    return this.http.get(this.urlTraerTipoRecurso);\n  }\n  //TODO: MODULO\n  //** Insertar */\n  insertarModulo(obj) {\n    // console.log(obj);\n    return this.http.post(this.urlInsertarModulo, obj);\n  }\n  // ** Eliminar\n  deleteModulo(id) {\n    // console.log(id);\n    return this.http.delete(`${this.urlEliminarModulo}${id}`);\n  }\n  // ** Actualizar\n  updateModulo(id, obj) {\n    //    console.log(id);\n    console.log(obj);\n    return this.http.put(`${this.urlUpdateModulo}${id}`, obj);\n  }\n  //TODO: SESION\n  // **BUSCAR SESION\n  buscarSesionId(id) {\n    return this.http.get(`${this.urlBuscarSesion}${id}`);\n  }\n  // **INSERTAR SESION\n  insertarSesion(obj) {\n    console.log(obj);\n    return this.http.post(this.urlInsertarSesion, obj);\n  }\n  //**ELIMINAR SESION */\n  eiminarSesion(id) {\n    console.log(id);\n    return this.http.delete(`${this.urlEliminarSesion}${id}`);\n  }\n  //**UPDATE SESION */\n  updateSesion(id, obj) {\n    console.log(id);\n    console.log(obj);\n    return this.http.put(`${this.urlUpdateSesion}${id}`, obj).pipe(catchError(e => {\n      if (e.status == 400) {\n        return throwError(e);\n      }\n      if (e.error.mensaje) {\n        console.error(e.error.mensaje);\n      }\n      return throwError(e);\n    }));\n  }\n  //todo: Recursos.........................................\n  // ?? BUSCAR RECURSO ID\n  buscarRecursoId(id) {\n    return this.http.get(`${this.urlBuscarRecurso}${id}`);\n  }\n  // ?? INSERTAR RECURSO\n  insertarRecurso(obj) {\n    console.log(obj);\n    return this.http.post(this.urlAgregarRecurso, obj);\n  }\n  eliminarRecurso(id) {\n    console.log(id);\n    return this.http.delete(`${this.urlEliminarRecurso}${id}`);\n  }\n  updateRecurso(id, obj) {\n    console.log(id);\n    console.log(obj);\n    return this.http.put(`${this.urlUpdaterRecurso}${id}`, obj);\n  }\n  buscarRecurso(id) {\n    return this.http.get(`${this.urlBuscarRecursoID}${id}`);\n  }\n}\nModulosService.ɵfac = function ModulosService_Factory(t) {\n  return new (t || ModulosService)(i0.ɵɵinject(i1.HttpClient));\n};\nModulosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModulosService,\n  factory: ModulosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["throwError","catchError","ModulosService","constructor","http","ngOnInit","getModulo","get","urlmodulo","getCategoria","urlcategoria","getSesionModulo","id","urlSesionesDelModulo","getRecursoSesion","urlRecursoSesion","getModuloId","urlBuscarModulo","getTipoRecursos","urlTraerTipoRecurso","insertarModulo","obj","post","urlInsertarModulo","deleteModulo","delete","urlEliminarModulo","updateModulo","console","log","put","urlUpdateModulo","buscarSesionId","urlBuscarSesion","insertarSesion","urlInsertarSesion","eiminarSesion","urlEliminarSesion","updateSesion","urlUpdateSesion","pipe","e","status","error","mensaje","buscarRecursoId","urlBuscarRecurso","insertarRecurso","urlAgregarRecurso","eliminarRecurso","urlEliminarRecurso","updateRecurso","urlUpdaterRecurso","buscarRecurso","urlBuscarRecursoID","factory","providedIn"],"sourceRoot":"","sources":["/Users/alvaroalvachipana/Documents/Proyectos/Universidad/frontend-sigca/src/app/equipo-tecnico/crearModulo/service/modulos.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Categoria } from 'src/app/models/categoria';\nimport { Modulo } from 'src/app/models/modulo';\nimport { Recurso } from 'src/app/models/recurso';\nimport { Sesion } from 'src/app/models/sesion';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModulosService {\n  private urlmodulo: string = 'http://localhost:9090/api/modulo';\n  private urlcategoria: string = 'http://localhost:9090/api/categoria';\n  private urlSesionesDelModulo: string =\n    'http://localhost:9090/api/sesion/modulo';\n  private urlRecursoSesion: string =\n    'http://localhost:9090/api/recursos/sesion/';\n\n  private urlInsertarModulo: string = 'http://localhost:9090/api/modulo/new';\n  private urlEliminarModulo: string =\n    'http://localhost:9090/api/modulo/delete/';\n\n  private urlBuscarModulo: string = 'http://localhost:9090/api/modulo/search/';\n  private urlUpdateModulo: string = 'http://localhost:9090/api/modulo/update/';\n\n  private urlInsertarSesion: string = 'http://localhost:9090/api/sesion/new';\n\n  private urlEliminarSesion: string =\n    'http://localhost:9090/api/sesion/delete/';\n\n  private urlUpdateSesion: string = 'http://localhost:9090/api/sesion/update/';\n\n  private urlBuscarSesion: string = 'http://localhost:9090/api/sesion/search/';\n\n  private urlBuscarRecurso: string =\n    'http://localhost:9090/api/recursos/sesion/';\n\n  private urlTraerTipoRecurso: string = 'http://localhost:9090/api/tipo/all';\n  private urlAgregarRecurso: string = 'http://localhost:9090/api/recursos/new';\n\n  private urlEliminarRecurso: string =\n    'http://localhost:9090/api/recursos/delete/';\n\n  private urlUpdaterRecurso: string =\n    'http://localhost:9090/api/recursos/update/';\n\n  private urlBuscarRecursoID: string =\n    'http://localhost:9090/api/recursos/search/';\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  getModulo(): Observable<Modulo[]> {\n    return this.http.get<Modulo[]>(this.urlmodulo + '/all');\n  }\n\n  getCategoria(): Observable<Categoria[]> {\n    return this.http.get<Categoria[]>(this.urlcategoria + '/all');\n  }\n\n  getSesionModulo(id: number): Observable<Sesion[]> {\n    return this.http.get<Sesion[]>(`${this.urlSesionesDelModulo}/${id}`);\n  }\n\n  getRecursoSesion(id: number): Observable<[]> {\n    return this.http.get<[]>(`${this.urlRecursoSesion}${id}`);\n  }\n\n  getModuloId(id: number): Observable<Modulo> {\n    return this.http.get<Modulo>(`${this.urlBuscarModulo}${id}`);\n  }\n\n  getTipoRecursos(): Observable<[]> {\n    return this.http.get<[]>(this.urlTraerTipoRecurso);\n  }\n\n  //TODO: MODULO\n  //** Insertar */\n\n  insertarModulo(obj: Modulo) {\n    // console.log(obj);\n    return this.http.post(this.urlInsertarModulo, obj);\n  }\n\n  // ** Eliminar\n\n  deleteModulo(id: number) {\n    // console.log(id);\n    return this.http.delete(`${this.urlEliminarModulo}${id}`);\n  }\n\n  // ** Actualizar\n\n  updateModulo(id: number, obj: Modulo) {\n    //    console.log(id);\n    console.log(obj);\n    return this.http.put(`${this.urlUpdateModulo}${id}`, obj);\n  }\n\n  //TODO: SESION\n\n  // **BUSCAR SESION\n\n  buscarSesionId(id: number): Observable<Sesion> {\n    return this.http.get<Sesion>(`${this.urlBuscarSesion}${id}`);\n  }\n\n  // **INSERTAR SESION\n  insertarSesion(obj: Sesion) {\n    console.log(obj);\n    return this.http.post(this.urlInsertarSesion, obj);\n  }\n\n  //**ELIMINAR SESION */\n\n  eiminarSesion(id: number) {\n    console.log(id);\n    return this.http.delete(`${this.urlEliminarSesion}${id}`);\n  }\n\n  //**UPDATE SESION */\n\n  updateSesion(id: number, obj: Sesion) {\n    console.log(id);\n    console.log(obj);\n    return this.http.put(`${this.urlUpdateSesion}${id}`, obj).pipe(\n      catchError((e) => {\n        if (e.status == 400) {\n          return throwError(e);\n        }\n        if (e.error.mensaje) {\n          console.error(e.error.mensaje);\n        }\n        return throwError(e);\n      })\n    );\n  }\n\n  //todo: Recursos.........................................\n\n  // ?? BUSCAR RECURSO ID\n\n  buscarRecursoId(id: number): Observable<Recurso> {\n    return this.http.get<Recurso>(`${this.urlBuscarRecurso}${id}`);\n  }\n\n  // ?? INSERTAR RECURSO\n  insertarRecurso(obj: any) {\n    console.log(obj);\n    return this.http.post(this.urlAgregarRecurso, obj);\n  }\n\n  eliminarRecurso(id: number) {\n    console.log(id);\n    return this.http.delete(`${this.urlEliminarRecurso}${id}`);\n  }\n\n  updateRecurso(id: number, obj: any) {\n    console.log(id);\n    console.log(obj);\n    return this.http.put(`${this.urlUpdaterRecurso}${id}`, obj);\n  }\n\n  buscarRecurso(id: number): Observable<Recurso> {\n    return this.http.get<Recurso>(`${this.urlBuscarRecursoID}${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}