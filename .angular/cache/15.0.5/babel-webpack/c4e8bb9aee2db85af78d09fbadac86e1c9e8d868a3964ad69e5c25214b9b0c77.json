{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class SocioService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.urlpost = 'http://localhost:9090/api/pedidooracion/new';\n    this.urlget = 'http://localhost:9090/api/seminario/socio';\n    this.progres = 'http://localhost:9090/api/reportes/progreso';\n    this.asistencia = 'http://localhost:9090/api/asistenciaseminario/new';\n    this.recurso = 'http://localhost:9090/api/reportes/asistenciaRecurso';\n    this.estadoAsistencia = 'http://localhost:9090/api/AsistenciaRecurso/asistencia';\n    this.asis = 'http://localhost:9090/api/asistenciaseminario/validacion';\n  }\n  insertarModulo(obj) {\n    return this.http.post(this.urlpost, obj, this.httpOptions);\n  }\n  insertarAsis(obj) {\n    return this.http.post(this.asistencia, obj, this.httpOptions);\n  }\n  getSeminarios(id) {\n    return this.http.get(`${this.urlget}/${id}`);\n  }\n  getProgreso(id) {\n    return this.http.get(`${this.progres}/${id}`);\n  }\n  insertarasistencia(socio, seminario, valor, des) {\n    return this.http.post(`${this.asistencia}/${socio}/${seminario}/${valor}/${des}`, null);\n  }\n  getRecursosS(sesion, socio) {\n    return this.http.get(`${this.recurso}/${sesion}/${socio}`);\n  }\n  getAsistencia(seminario, socio) {\n    return this.http.get(`${this.asis}/${seminario}/${socio}`);\n  }\n  actualizarEstado(id) {\n    return this.http.post(`${this.estadoAsistencia}/${id}`, null);\n  }\n}\nSocioService.ɵfac = function SocioService_Factory(t) {\n  return new (t || SocioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nSocioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SocioService,\n  factory: SocioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAa9D,OAAM,MAAOC,YAAY;EAYvBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAXpD,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IACO,YAAO,GAAS,6CAA6C;IAC7D,WAAM,GAAS,2CAA2C;IAC1D,YAAO,GAAS,6CAA6C;IAC7D,eAAU,GAAS,mDAAmD;IACtE,YAAO,GAAS,sDAAsD;IACtE,qBAAgB,GAAS,wDAAwD;IACjF,SAAI,GAAS,0DAA0D;EAEf;EAChEM,cAAc,CAACC,GAAW;IAGxB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACC,OAAO,EAAEF,GAAG,EAAC,IAAI,CAACG,WAAW,CAAC;EAC3D;EACAC,YAAY,CAACJ,GAAkB;IAG7B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACI,UAAU,EAAEL,GAAG,EAAC,IAAI,CAACG,WAAW,CAAC;EAC9D;EACAG,aAAa,CAACC,EAAS;IACrB,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAc,GAAG,IAAI,CAACC,MAAM,IAAIF,EAAE,EAAE,CAAC;EAC3D;EAEAG,WAAW,CAACH,EAAS;IAEnB,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAa,GAAG,IAAI,CAACG,OAAO,IAAIJ,EAAE,EAAE,CAAC;EAE3D;EAEAK,kBAAkB,CAACC,KAAY,EAAEC,SAAgB,EAAEC,KAAa,EAAEC,GAAU;IAE1E,OAAO,IAAI,CAACpB,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACI,UAAU,IAAIQ,KAAK,IAAIC,SAAS,IAAIC,KAAK,IAAIC,GAAG,EAAE,EAAC,IAAI,CAAC;EACxF;EAEAC,YAAY,CAACC,MAAa,EAAEL,KAAY;IACtC,OAAO,IAAI,CAACjB,IAAI,CAACY,GAAG,CAAa,GAAG,IAAI,CAACW,OAAO,IAAID,MAAM,IAAIL,KAAK,EAAE,CAAC;EACxE;EACAO,aAAa,CAACN,SAAgB,EAAED,KAAY;IAC1C,OAAO,IAAI,CAACjB,IAAI,CAACY,GAAG,CAAkB,GAAG,IAAI,CAACa,IAAI,IAAIP,SAAS,IAAID,KAAK,EAAE,CAAC;EAC7E;EAEAS,gBAAgB,CAACf,EAAS;IACxB,OAAO,IAAI,CAACX,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACsB,gBAAgB,IAAIhB,EAAE,EAAE,EAAC,IAAI,CAAC;EAE9D;;;mBAhDWb,YAAY;AAAA;;SAAZA,YAAY;EAAA8B,SAAZ9B,YAAY;EAAA+B,YAFX;AAAM","names":["HttpHeaders","SocioService","constructor","http","router","headers","insertarModulo","obj","post","urlpost","httpOptions","insertarAsis","asistencia","getSeminarios","id","get","urlget","getProgreso","progres","insertarasistencia","socio","seminario","valor","des","getRecursosS","sesion","recurso","getAsistencia","asis","actualizarEstado","estadoAsistencia","factory","providedIn"],"sourceRoot":"","sources":["/Users/alvaroalvachipana/Documents/Proyectos/Universidad/frontend-sigca/src/app/socio/socio.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AsisSeminario } from '../models/AsistenciaSeminario';\nimport { Pedido } from '../models/pedido';\nimport { Progreso } from '../models/Progreso';\nimport { RecursoA } from '../models/recursosA';\nimport { Seminario } from '../models/Seminario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocioService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n  private urlpost:string ='http://localhost:9090/api/pedidooracion/new';\n  private urlget:string ='http://localhost:9090/api/seminario/socio';\n  private progres:string ='http://localhost:9090/api/reportes/progreso';\n  private asistencia:string ='http://localhost:9090/api/asistenciaseminario/new';\n  private recurso:string ='http://localhost:9090/api/reportes/asistenciaRecurso';\n  private estadoAsistencia:string ='http://localhost:9090/api/AsistenciaRecurso/asistencia';\n  private asis:string ='http://localhost:9090/api/asistenciaseminario/validacion';\n\n  constructor(private http: HttpClient, private router: Router) { }\n  insertarModulo(obj: Pedido) {\n\n\n    return this.http.post(this.urlpost, obj,this.httpOptions) ;\n  }\n  insertarAsis(obj: AsisSeminario) {\n\n\n    return this.http.post(this.asistencia, obj,this.httpOptions) ;\n  }\n  getSeminarios(id:number): Observable<Seminario[]>{\n    return this.http.get<Seminario[]>(`${this.urlget}/${id}`)\n  }\n\n  getProgreso(id:number): Observable<Progreso[]>{\n\n    return this.http.get<Progreso[]>(`${this.progres}/${id}`)\n\n  }\n\n  insertarasistencia(socio:number, seminario:number, valor: number, des:String ) {\n\n    return this.http.post(`${this.asistencia}/${socio}/${seminario}/${valor}/${des}`,null) ;\n  }\n\n  getRecursosS(sesion:number, socio:number): Observable<RecursoA[]>{\n    return this.http.get<RecursoA[]>(`${this.recurso}/${sesion}/${socio}`)\n  }\n  getAsistencia(seminario:number, socio:number): Observable<AsisSeminario[]>{\n    return this.http.get<AsisSeminario[]>(`${this.asis}/${seminario}/${socio}`)\n  }\n\n  actualizarEstado(id:number ) {\n    return this.http.post(`${this.estadoAsistencia}/${id}`,null) ;\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}